[tox]
min_version = 4.0

envlist =
    py{3.8,3.9,3.10}-django{3.2}-wagtail{5.2}
    py{3.8,3.9,3.10,3.11,3.12}-django{4.2}-wagtail{5.2}
    py{3.10,3.11,3.12}-django{5.0}-wagtail{5.2}

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312

[gh-actions:env]
DB =
    sqlite: sqlite
    postgres: postgres

[testenv]
package = wheel
wheel_build_env = .pkg

pass_env =
    FORCE_COLOR
    NO_COLOR

setenv =
    PYTHONPATH = {toxinidir}
    PYTHONDEVMODE = 1

deps =
    flit>=3.8

    django3.2: Django>=3.2,<3.3
    django4.2: Django>=4.2,<4.3
    django5.0: Django>=5.0,<5.1
    djmain: git+https://github.com/django/django.git@main#egg=Django

    wagtail5.2: wagtail>=5.2,<5.3
    wagtailmain: git+https://github.com/wagtail/wagtail.git

    postgres: psycopg2>=2.9

    .[testing]

install_command = python -Im pip install -U --pre {opts} {packages}
commands =
    python -m coverage run testmanage.py test --deprecation all {posargs: -v 2}

[testenv:coverage-report]
commands =
    python -Im coverage combine
    python -Im coverage report -m

[testenv:interactive]
description = An interactive environment for local testing purposes
basepython = python3.11

commands_pre =
    python {toxinidir}/testmanage.py makemigrations
    python {toxinidir}/testmanage.py migrate
    python {toxinidir}/testmanage.py shell -c "from django.contrib.auth.models import User;(not User.objects.filter(username='admin').exists()) and User.objects.create_superuser('admin', 'super@example.com', 'changeme')"
    python {toxinidir}/testmanage.py createcachetable

commands =
    {posargs:python testmanage.py runserver 0.0.0.0:8020}

setenv =
    INTERACTIVE = 1

[testenv:wagtailmain]
deps =
    flit>=3.8
    coverage>=7.0,<8.0
    wagtailmain: git+https://github.com/wagtail/wagtail.git@main#egg=Wagtail
